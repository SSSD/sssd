/*
    Generated by sbus code generator

    Copyright (C) 2017 Red Hat

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _SBUS_DBUS_CLIENT_ASYNC_H_
#define _SBUS_DBUS_CLIENT_ASYNC_H_

#include <errno.h>
#include <talloc.h>
#include <tevent.h>

#include "sbus/sbus.h"
#include "sbus/interface_dbus/sbus_dbus_client_properties.h"

struct tevent_req *
sbus_call_DBus_GetConnectionUnixUser_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     const char *busname,
     const char *object_path,
     const char * arg_name);

errno_t
sbus_call_DBus_GetConnectionUnixUser_recv
    (struct tevent_req *req,
     uint32_t* _uid);

struct tevent_req *
sbus_call_DBus_Hello_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     const char *busname,
     const char *object_path);

errno_t
sbus_call_DBus_Hello_recv
    (TALLOC_CTX *mem_ctx,
     struct tevent_req *req,
     const char ** _name);

struct tevent_req *
sbus_call_DBus_RequestName_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     const char *busname,
     const char *object_path,
     const char * arg_name,
     uint32_t arg_flags);

errno_t
sbus_call_DBus_RequestName_recv
    (struct tevent_req *req,
     uint32_t* _result);

struct tevent_req *
sbus_call_DBusProperties_Get_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     const char *busname,
     const char *object_path,
     const char * arg_interface_name,
     const char * arg_property_name);

errno_t
sbus_call_DBusProperties_Get_recv
    (TALLOC_CTX *mem_ctx,
     struct tevent_req *req,
     DBusMessage **_reply);

struct tevent_req *
sbus_call_DBusProperties_GetAll_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     const char *busname,
     const char *object_path,
     const char * arg_interface_name);

errno_t
sbus_call_DBusProperties_GetAll_recv
    (TALLOC_CTX *mem_ctx,
     struct tevent_req *req,
     DBusMessage **_reply);

struct tevent_req *
sbus_call_DBusProperties_Set_send
    (TALLOC_CTX *mem_ctx,
     struct sbus_connection *conn,
     DBusMessage *raw_message);

errno_t
sbus_call_DBusProperties_Set_recv
    (struct tevent_req *req);

#endif /* _SBUS_DBUS_CLIENT_ASYNC_H_ */
