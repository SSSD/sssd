/*
    Generated by sbus code generator

    Copyright (C) 2017 Red Hat

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _SBUS_DBUS_INTERFACE_H_
#define _SBUS_DBUS_INTERFACE_H_

#include "sbus/sbus_interface_declarations.h"
#include "sbus/interface_dbus/sbus_dbus_invokers.h"
#include "sbus/interface_dbus/sbus_dbus_symbols.h"
#include "sbus/interface_dbus/sbus_dbus_keygens.h"

/* Interface: org.freedesktop.DBus */
#define SBUS_IFACE_org_freedesktop_DBus(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.DBus", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.DBus.AddMatch */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_AddMatch(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *); \
    sbus_method_sync("AddMatch", \
        &_sbus_dbus_args_org_freedesktop_DBus_AddMatch, \
        NULL, \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_AddMatch(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("AddMatch", \
        &_sbus_dbus_args_org_freedesktop_DBus_AddMatch, \
        NULL, \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.GetConnectionUnixProcessID */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_GetConnectionUnixProcessID(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t*); \
    sbus_method_sync("GetConnectionUnixProcessID", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetConnectionUnixProcessID, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_GetConnectionUnixProcessID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_method_async("GetConnectionUnixProcessID", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetConnectionUnixProcessID, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.GetConnectionUnixUser */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_GetConnectionUnixUser(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t*); \
    sbus_method_sync("GetConnectionUnixUser", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetConnectionUnixUser, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_GetConnectionUnixUser(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_method_async("GetConnectionUnixUser", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetConnectionUnixUser, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.GetId */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_GetId(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_method_sync("GetId", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetId, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        _sbus_dbus_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_GetId(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("GetId", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetId, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        _sbus_dbus_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.GetNameOwner */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_GetNameOwner(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("GetNameOwner", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetNameOwner, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_s_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_GetNameOwner(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("GetNameOwner", \
        &_sbus_dbus_args_org_freedesktop_DBus_GetNameOwner, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_s_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.Hello */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_Hello(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_method_sync("Hello", \
        &_sbus_dbus_args_org_freedesktop_DBus_Hello, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_Hello(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("Hello", \
        &_sbus_dbus_args_org_freedesktop_DBus_Hello, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.ListActivatableNames */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_ListActivatableNames(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListActivatableNames", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListActivatableNames, \
        NULL, \
        _sbus_dbus_invoke_in__out_as_send, \
        _sbus_dbus_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_ListActivatableNames(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListActivatableNames", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListActivatableNames, \
        NULL, \
        _sbus_dbus_invoke_in__out_as_send, \
        _sbus_dbus_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.ListNames */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_ListNames(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListNames", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListNames, \
        NULL, \
        _sbus_dbus_invoke_in__out_as_send, \
        _sbus_dbus_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_ListNames(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListNames", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListNames, \
        NULL, \
        _sbus_dbus_invoke_in__out_as_send, \
        _sbus_dbus_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.ListQueuedOwners */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_ListQueuedOwners(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char ***); \
    sbus_method_sync("ListQueuedOwners", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListQueuedOwners, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_as_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_ListQueuedOwners(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListQueuedOwners", \
        &_sbus_dbus_args_org_freedesktop_DBus_ListQueuedOwners, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_as_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.NameHasOwner */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_NameHasOwner(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, bool*); \
    sbus_method_sync("NameHasOwner", \
        &_sbus_dbus_args_org_freedesktop_DBus_NameHasOwner, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_b_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_NameHasOwner(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_method_async("NameHasOwner", \
        &_sbus_dbus_args_org_freedesktop_DBus_NameHasOwner, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_b_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.ReleaseName */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_ReleaseName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t*); \
    sbus_method_sync("ReleaseName", \
        &_sbus_dbus_args_org_freedesktop_DBus_ReleaseName, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_ReleaseName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_method_async("ReleaseName", \
        &_sbus_dbus_args_org_freedesktop_DBus_ReleaseName, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_u_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.RemoveMatch */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_RemoveMatch(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *); \
    sbus_method_sync("RemoveMatch", \
        &_sbus_dbus_args_org_freedesktop_DBus_RemoveMatch, \
        NULL, \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_RemoveMatch(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("RemoveMatch", \
        &_sbus_dbus_args_org_freedesktop_DBus_RemoveMatch, \
        NULL, \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.RequestName */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_RequestName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t, uint32_t*); \
    sbus_method_sync("RequestName", \
        &_sbus_dbus_args_org_freedesktop_DBus_RequestName, \
        NULL, \
        _sbus_dbus_invoke_in_su_out_u_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_RequestName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_method_async("RequestName", \
        &_sbus_dbus_args_org_freedesktop_DBus_RequestName, \
        NULL, \
        _sbus_dbus_invoke_in_su_out_u_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.StartServiceByName */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_StartServiceByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t, uint32_t*); \
    sbus_method_sync("StartServiceByName", \
        &_sbus_dbus_args_org_freedesktop_DBus_StartServiceByName, \
        NULL, \
        _sbus_dbus_invoke_in_su_out_u_send, \
        _sbus_dbus_key_su_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_StartServiceByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_method_async("StartServiceByName", \
        &_sbus_dbus_args_org_freedesktop_DBus_StartServiceByName, \
        NULL, \
        _sbus_dbus_invoke_in_su_out_u_send, \
        _sbus_dbus_key_su_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Signal: org.freedesktop.DBus.NameAcquired */
#define SBUS_SIGNAL_EMITS_org_freedesktop_DBus_NameAcquired() ({ \
    sbus_signal("NameAcquired", \
        _sbus_dbus_args_org_freedesktop_DBus_NameAcquired, \
        NULL); \
})

#define SBUS_SIGNAL_SYNC_org_freedesktop_DBus_NameAcquired(path, handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *); \
    sbus_listener_sync("org.freedesktop.DBus", "NameAcquired", (path), \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_SIGNAL_ASYNC_org_freedesktop_DBus_NameAcquired(path, handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_listener_async("org.freedesktop.DBus", "NameAcquired", (path), \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Signal: org.freedesktop.DBus.NameLost */
#define SBUS_SIGNAL_EMITS_org_freedesktop_DBus_NameLost() ({ \
    sbus_signal("NameLost", \
        _sbus_dbus_args_org_freedesktop_DBus_NameLost, \
        NULL); \
})

#define SBUS_SIGNAL_SYNC_org_freedesktop_DBus_NameLost(path, handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *); \
    sbus_listener_sync("org.freedesktop.DBus", "NameLost", (path), \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_SIGNAL_ASYNC_org_freedesktop_DBus_NameLost(path, handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_listener_async("org.freedesktop.DBus", "NameLost", (path), \
        _sbus_dbus_invoke_in_s_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Signal: org.freedesktop.DBus.NameOwnerChanged */
#define SBUS_SIGNAL_EMITS_org_freedesktop_DBus_NameOwnerChanged() ({ \
    sbus_signal("NameOwnerChanged", \
        _sbus_dbus_args_org_freedesktop_DBus_NameOwnerChanged, \
        NULL); \
})

#define SBUS_SIGNAL_SYNC_org_freedesktop_DBus_NameOwnerChanged(path, handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char *, const char *); \
    sbus_listener_sync("org.freedesktop.DBus", "NameOwnerChanged", (path), \
        _sbus_dbus_invoke_in_sss_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_SIGNAL_ASYNC_org_freedesktop_DBus_NameOwnerChanged(path, handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char *, const char *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_listener_async("org.freedesktop.DBus", "NameOwnerChanged", (path), \
        _sbus_dbus_invoke_in_sss_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.DBus.Introspectable */
#define SBUS_IFACE_org_freedesktop_DBus_Introspectable(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.DBus.Introspectable", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.DBus.Introspectable.Introspect */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_Introspectable_Introspect(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_method_sync("Introspect", \
        &_sbus_dbus_args_org_freedesktop_DBus_Introspectable_Introspect, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_Introspectable_Introspect(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("Introspect", \
        &_sbus_dbus_args_org_freedesktop_DBus_Introspectable_Introspect, \
        NULL, \
        _sbus_dbus_invoke_in__out_s_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.DBus.Properties */
#define SBUS_IFACE_org_freedesktop_DBus_Properties(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.DBus.Properties", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.DBus.Properties.Get */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_Properties_Get(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char *, DBusMessageIter *); \
    sbus_method_sync("Get", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_Get, \
        NULL, \
        _sbus_dbus_invoke_in_ss_out_raw_send, \
        _sbus_dbus_key_ss_0_1, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_Properties_Get(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char *, DBusMessageIter *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("Get", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_Get, \
        NULL, \
        _sbus_dbus_invoke_in_ss_out_raw_send, \
        _sbus_dbus_key_ss_0_1, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.Properties.GetAll */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_Properties_GetAll(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, DBusMessageIter *); \
    sbus_method_sync("GetAll", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_GetAll, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_raw_send, \
        _sbus_dbus_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_Properties_GetAll(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, DBusMessageIter *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("GetAll", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_GetAll, \
        NULL, \
        _sbus_dbus_invoke_in_s_out_raw_send, \
        _sbus_dbus_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.DBus.Properties.Set */
#define SBUS_METHOD_SYNC_org_freedesktop_DBus_Properties_Set(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), DBusMessageIter *); \
    sbus_method_sync("Set", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_Set, \
        NULL, \
        _sbus_dbus_invoke_in_raw_out__send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_DBus_Properties_Set(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), DBusMessageIter *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("Set", \
        &_sbus_dbus_args_org_freedesktop_DBus_Properties_Set, \
        NULL, \
        _sbus_dbus_invoke_in_raw_out__send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

#endif /* _SBUS_DBUS_INTERFACE_H_ */
