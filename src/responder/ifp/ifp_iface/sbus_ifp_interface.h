/*
    Generated by sbus code generator

    Copyright (C) 2017 Red Hat

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef _SBUS_IFP_INTERFACE_H_
#define _SBUS_IFP_INTERFACE_H_

#include "sbus/sbus_interface_declarations.h"
#include "responder/ifp/ifp_iface/sbus_ifp_invokers.h"
#include "responder/ifp/ifp_iface/sbus_ifp_symbols.h"
#include "responder/ifp/ifp_iface/sbus_ifp_keygens.h"

/* Interface: org.freedesktop.sssd.infopipe */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.FindBackendByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_FindBackendByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindBackendByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindBackendByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_FindBackendByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindBackendByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindBackendByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.FindDomainByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_FindDomainByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindDomainByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindDomainByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_FindDomainByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindDomainByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindDomainByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.FindMonitor */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_FindMonitor(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_method_sync("FindMonitor", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindMonitor, \
        NULL, \
        _sbus_ifp_invoke_in__out_o_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_FindMonitor(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindMonitor", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindMonitor, \
        NULL, \
        _sbus_ifp_invoke_in__out_o_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.FindResponderByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_FindResponderByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindResponderByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindResponderByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_FindResponderByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindResponderByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_FindResponderByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.GetUserAttr */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_GetUserAttr(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **, DBusMessageIter *); \
    sbus_method_sync("GetUserAttr", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_GetUserAttr, \
        NULL, \
        _sbus_ifp_invoke_in_sas_out_raw_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_GetUserAttr(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char **, DBusMessageIter *); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("GetUserAttr", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_GetUserAttr, \
        NULL, \
        _sbus_ifp_invoke_in_sas_out_raw_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.GetUserGroups */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_GetUserGroups(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char ***); \
    sbus_method_sync("GetUserGroups", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_GetUserGroups, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_as_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_GetUserGroups(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("GetUserGroups", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_GetUserGroups, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_as_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.ListBackends */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_ListBackends(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListBackends", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListBackends, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_ListBackends(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListBackends", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListBackends, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.ListComponents */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_ListComponents(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListComponents", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListComponents, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_ListComponents(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListComponents", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListComponents, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.ListDomains */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_ListDomains(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListDomains", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListDomains, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_ListDomains(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListDomains", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListDomains, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.ListResponders */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_ListResponders(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListResponders", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListResponders, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_ListResponders(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListResponders", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_ListResponders, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Ping */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Ping(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("Ping", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Ping, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_s_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Ping(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("Ping", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Ping, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_s_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Cache */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Cache(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Cache", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Cache.List */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Cache_List(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("List", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_List, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Cache_List(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("List", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_List, \
        NULL, \
        _sbus_ifp_invoke_in__out_ao_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Cache.ListByDomain */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Cache_ListByDomain(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char ***); \
    sbus_method_sync("ListByDomain", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_ListByDomain, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_ao_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Cache_ListByDomain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByDomain", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_ListByDomain, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_ao_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Cache.Object */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Cache_Object(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Cache.Object", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Cache.Object.Remove */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Cache_Object_Remove(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_method_sync("Remove", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_Object_Remove, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Cache_Object_Remove(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_method_async("Remove", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_Object_Remove, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Cache.Object.Store */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Cache_Object_Store(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_method_sync("Store", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_Object_Store, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Cache_Object_Store(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_method_async("Store", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Cache_Object_Store, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Components */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Components(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Components", NULL, \
        (methods), (signals), (properties)); \
})

/* Property: org.freedesktop.sssd.infopipe.Components.debug_level */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Components_debug_level(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("debug_level", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_debug_level(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("debug_level", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Components_debug_level(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("debug_level", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_debug_level(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("debug_level", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Components.enabled */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Components_enabled(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_property_sync("enabled", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_enabled(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_property_async("enabled", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Components_enabled(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("enabled", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_enabled(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("enabled", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Components.name */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Components_name(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Components_name(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Components.providers */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Components_providers(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("providers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_providers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("providers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Components_providers(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("providers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_providers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("providers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Components.type */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Components_type(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("type", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_type(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("type", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Components_type(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("type", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Components_type(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("type", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Domains */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Domains(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Domains", NULL, \
        (methods), (signals), (properties)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.backup_servers */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_backup_servers(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("backup_servers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_backup_servers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("backup_servers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_backup_servers(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("backup_servers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_backup_servers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("backup_servers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.enumerable */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_enumerable(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_property_sync("enumerable", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_enumerable(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_property_async("enumerable", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_enumerable(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("enumerable", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_enumerable(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("enumerable", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.forest */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_forest(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("forest", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_forest(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("forest", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_forest(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("forest", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_forest(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("forest", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.fully_qualified_name_format */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_fully_qualified_name_format(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("fully_qualified_name_format", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_fully_qualified_name_format(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("fully_qualified_name_format", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_fully_qualified_name_format(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("fully_qualified_name_format", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_fully_qualified_name_format(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("fully_qualified_name_format", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.login_format */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_login_format(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("login_format", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_login_format(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("login_format", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_login_format(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("login_format", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_login_format(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("login_format", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.max_id */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_max_id(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("max_id", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_max_id(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("max_id", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_max_id(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("max_id", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_max_id(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("max_id", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.min_id */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_min_id(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("min_id", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_min_id(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("min_id", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_min_id(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("min_id", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_min_id(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("min_id", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.name */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_name(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_name(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.parent_domain */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_parent_domain(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("parent_domain", "o", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_o_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_parent_domain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("parent_domain", "o", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_o_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_parent_domain(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("parent_domain", "o", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_parent_domain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("parent_domain", "o", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.primary_servers */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_primary_servers(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("primary_servers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_primary_servers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("primary_servers", "as", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_as_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_primary_servers(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("primary_servers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_primary_servers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("primary_servers", "as", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.provider */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_provider(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("provider", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_provider(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("provider", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_provider(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("provider", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_provider(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("provider", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.realm */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_realm(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("realm", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_realm(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("realm", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_realm(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("realm", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_realm(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("realm", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.subdomain */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_subdomain(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_property_sync("subdomain", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_subdomain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_property_async("subdomain", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_subdomain(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("subdomain", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_subdomain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("subdomain", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Domains.use_fully_qualified_names */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_use_fully_qualified_names(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_property_sync("use_fully_qualified_names", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_use_fully_qualified_names(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_property_async("use_fully_qualified_names", "b", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_b_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Domains_use_fully_qualified_names(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("use_fully_qualified_names", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Domains_use_fully_qualified_names(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("use_fully_qualified_names", "b", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Domains.Domain */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Domains_Domain(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Domains.Domain", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Domains.Domain.ActiveServer */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ActiveServer(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("ActiveServer", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ActiveServer, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_s_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ActiveServer(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("ActiveServer", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ActiveServer, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_s_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Domains.Domain.IsOnline */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Domains_Domain_IsOnline(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), bool*); \
    sbus_method_sync("IsOnline", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_IsOnline, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Domains_Domain_IsOnline(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), bool*); \
    sbus_method_async("IsOnline", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_IsOnline, \
        NULL, \
        _sbus_ifp_invoke_in__out_b_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Domains.Domain.ListServers */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ListServers(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char ***); \
    sbus_method_sync("ListServers", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ListServers, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_as_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ListServers(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListServers", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ListServers, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_as_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Domains.Domain.ListServices */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ListServices(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_method_sync("ListServices", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ListServices, \
        NULL, \
        _sbus_ifp_invoke_in__out_as_send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Domains_Domain_ListServices(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListServices", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_ListServices, \
        NULL, \
        _sbus_ifp_invoke_in__out_as_send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Domains.Domain.RefreshAccessRules */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Domains_Domain_RefreshAccessRules(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_method_sync("RefreshAccessRules", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_RefreshAccessRules, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Domains_Domain_RefreshAccessRules(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("RefreshAccessRules", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Domains_Domain_RefreshAccessRules, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Groups */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Groups(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Groups", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Groups.FindByID */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Groups_FindByID(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t, const char **); \
    sbus_method_sync("FindByID", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_FindByID, \
        NULL, \
        _sbus_ifp_invoke_in_u_out_o_send, \
        _sbus_ifp_key_u_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Groups_FindByID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByID", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_FindByID, \
        NULL, \
        _sbus_ifp_invoke_in_u_out_o_send, \
        _sbus_ifp_key_u_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Groups.FindByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Groups_FindByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_FindByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Groups_FindByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_FindByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Groups.ListByDomainAndName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Groups_ListByDomainAndName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char *, uint32_t, const char ***); \
    sbus_method_sync("ListByDomainAndName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_ListByDomainAndName, \
        NULL, \
        _sbus_ifp_invoke_in_ssu_out_ao_send, \
        _sbus_ifp_key_ssu_0_1_2, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Groups_ListByDomainAndName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByDomainAndName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_ListByDomainAndName, \
        NULL, \
        _sbus_ifp_invoke_in_ssu_out_ao_send, \
        _sbus_ifp_key_ssu_0_1_2, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Groups.ListByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Groups_ListByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t, const char ***); \
    sbus_method_sync("ListByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_ListByName, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        _sbus_ifp_key_su_0_1, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Groups_ListByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_ListByName, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        _sbus_ifp_key_su_0_1, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Groups.Group */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Groups_Group(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Groups.Group", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Groups.Group.UpdateMemberList */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_UpdateMemberList(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_method_sync("UpdateMemberList", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_Group_UpdateMemberList, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_UpdateMemberList(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("UpdateMemberList", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Groups_Group_UpdateMemberList, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Groups.Group.gidNumber */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_gidNumber(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("gidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_gidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("gidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_gidNumber(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("gidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_gidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("gidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Groups.Group.groups */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_groups(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("groups", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_groups(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("groups", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_groups(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("groups", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_groups(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("groups", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Groups.Group.name */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_name(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_name(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Groups.Group.uniqueID */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_uniqueID(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("uniqueID", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_uniqueID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("uniqueID", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_uniqueID(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("uniqueID", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_uniqueID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("uniqueID", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Groups.Group.users */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_users(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("users", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_users(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("users", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Groups_Group_users(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("users", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Groups_Group_users(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("users", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Users */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Users(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Users", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.FindByCertificate */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_FindByCertificate(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindByCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_FindByCertificate(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.FindByID */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_FindByID(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t, const char **); \
    sbus_method_sync("FindByID", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByID, \
        NULL, \
        _sbus_ifp_invoke_in_u_out_o_send, \
        _sbus_ifp_key_u_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_FindByID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByID", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByID, \
        NULL, \
        _sbus_ifp_invoke_in_u_out_o_send, \
        _sbus_ifp_key_u_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.FindByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_FindByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char **); \
    sbus_method_sync("FindByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_FindByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByName, \
        NULL, \
        _sbus_ifp_invoke_in_s_out_o_send, \
        _sbus_ifp_key_s_0, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.FindByNameAndCertificate */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_FindByNameAndCertificate(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char *, const char **); \
    sbus_method_sync("FindByNameAndCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByNameAndCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_ss_out_o_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_FindByNameAndCertificate(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char *); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_method_async("FindByNameAndCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_FindByNameAndCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_ss_out_o_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.ListByCertificate */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_ListByCertificate(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t, const char ***); \
    sbus_method_sync("ListByCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        NULL, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_ListByCertificate(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByCertificate", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByCertificate, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        NULL, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.ListByDomainAndName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_ListByDomainAndName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, const char *, uint32_t, const char ***); \
    sbus_method_sync("ListByDomainAndName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByDomainAndName, \
        NULL, \
        _sbus_ifp_invoke_in_ssu_out_ao_send, \
        _sbus_ifp_key_ssu_0_1_2, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_ListByDomainAndName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByDomainAndName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByDomainAndName, \
        NULL, \
        _sbus_ifp_invoke_in_ssu_out_ao_send, \
        _sbus_ifp_key_ssu_0_1_2, \
        (handler_send), (handler_recv), (data)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.ListByName */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_ListByName(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char *, uint32_t, const char ***); \
    sbus_method_sync("ListByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByName, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        _sbus_ifp_key_su_0_1, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_ListByName(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data), const char *, uint32_t); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_method_async("ListByName", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_ListByName, \
        NULL, \
        _sbus_ifp_invoke_in_su_out_ao_send, \
        _sbus_ifp_key_su_0_1, \
        (handler_send), (handler_recv), (data)); \
})

/* Interface: org.freedesktop.sssd.infopipe.Users.User */
#define SBUS_IFACE_org_freedesktop_sssd_infopipe_Users_User(methods, signals, properties) ({ \
    sbus_interface("org.freedesktop.sssd.infopipe.Users.User", NULL, \
        (methods), (signals), (properties)); \
})

/* Method: org.freedesktop.sssd.infopipe.Users.User.UpdateGroupsList */
#define SBUS_METHOD_SYNC_org_freedesktop_sssd_infopipe_Users_User_UpdateGroupsList(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_method_sync("UpdateGroupsList", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_User_UpdateGroupsList, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler), (data)); \
})

#define SBUS_METHOD_ASYNC_org_freedesktop_sssd_infopipe_Users_User_UpdateGroupsList(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_method_async("UpdateGroupsList", \
        &_sbus_ifp_args_org_freedesktop_sssd_infopipe_Users_User_UpdateGroupsList, \
        NULL, \
        _sbus_ifp_invoke_in__out__send, \
        _sbus_ifp_key_, \
        (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.domain */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_domain(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("domain", "o", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_o_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_domain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("domain", "o", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_o_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_domain(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("domain", "o", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_domain(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("domain", "o", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.domainname */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_domainname(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("domainname", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_domainname(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("domainname", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_domainname(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("domainname", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_domainname(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("domainname", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.extraAttributes */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_extraAttributes(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), hash_table_t **); \
    sbus_property_sync("extraAttributes", "a{sas}", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ifp_extra_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_extraAttributes(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), hash_table_t **); \
    sbus_property_async("extraAttributes", "a{sas}", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ifp_extra_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_extraAttributes(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("extraAttributes", "a{sas}", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_extraAttributes(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("extraAttributes", "a{sas}", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.gecos */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_gecos(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("gecos", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_gecos(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("gecos", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_gecos(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("gecos", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_gecos(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("gecos", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.gidNumber */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_gidNumber(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("gidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_gidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("gidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_gidNumber(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("gidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_gidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("gidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.groups */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_groups(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char ***); \
    sbus_property_sync("groups", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_groups(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char ***); \
    sbus_property_async("groups", "ao", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_ao_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_groups(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("groups", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_groups(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("groups", "ao", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.homeDirectory */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_homeDirectory(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("homeDirectory", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_homeDirectory(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("homeDirectory", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_homeDirectory(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("homeDirectory", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_homeDirectory(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("homeDirectory", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.loginShell */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_loginShell(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("loginShell", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_loginShell(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("loginShell", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_loginShell(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("loginShell", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_loginShell(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("loginShell", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.name */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_name(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("name", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_name(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_name(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("name", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.uidNumber */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_uidNumber(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), uint32_t*); \
    sbus_property_sync("uidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_uidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), uint32_t*); \
    sbus_property_async("uidNumber", "u", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_u_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_uidNumber(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("uidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_uidNumber(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("uidNumber", "u", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

/* Property: org.freedesktop.sssd.infopipe.Users.User.uniqueID */
#define SBUS_GETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_uniqueID(handler, data) ({ \
    SBUS_CHECK_SYNC((handler), (data), const char **); \
    sbus_property_sync("uniqueID", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler), (data)); \
})

#define SBUS_GETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_uniqueID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv), const char **); \
    sbus_property_async("uniqueID", "s", SBUS_PROPERTY_READABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out_s_send, \
       (handler_send), (handler_recv), (data)); \
})

#define SBUS_SETTER_SYNC_org_freedesktop_sssd_infopipe_Users_User_uniqueID(handler, data) ({\
    SBUS_CHECK_SYNC((handler), (data)); \
    sbus_property_sync("uniqueID", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler), (data)); \
})

#define SBUS_SETTER_ASYNC_org_freedesktop_sssd_infopipe_Users_User_uniqueID(handler_send, handler_recv, data) ({ \
    SBUS_CHECK_SEND((handler_send), (data)); \
    SBUS_CHECK_RECV((handler_recv)); \
    sbus_property_async("uniqueID", "s", SBUS_PROPERTY_WRITABLE, \
       NULL, \
       _sbus_ifp_invoke_in__out__send, \
       (handler_send), (handler_recv), (data)); \
})

#endif /* _SBUS_IFP_INTERFACE_H_ */
