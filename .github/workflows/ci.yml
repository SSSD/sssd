name: "ci"
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  prepare:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4

    - name: Get matrix
      id: matrix
      run: ./contrib/ci/get-matrix.py --action

  system:
    needs: [prepare]
    strategy:
      fail-fast: false
      matrix:
        tag: ${{ fromJson(needs.prepare.outputs.matrix).multihost }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Checkout sssd repository
      uses: actions/checkout@v4
      with:
        path: sssd

    - name: Setup containers
      uses: SSSD/sssd-ci-containers/actions/setup@master
      with:
        path: sssd-ci-containers
        tag: ${{ matrix.tag }}
        override: |
          services:
            client:
              image: ${REGISTRY}/ci-client-devel:${TAG}
              shm_size: 4G
              tmpfs:
              - /dev/shm
              volumes:
              - ../sssd:/sssd:rw
            ipa:
              image: ${REGISTRY}/ci-ipa-devel:${TAG}
              shm_size: 4G
              tmpfs:
              - /dev/shm
              volumes:
              - ../sssd:/sssd:rw

    - name: Patch the SSH configuration
      uses: SSSD/sssd-ci-containers/actions/exec@master
      with:
        user: root
        script: |
          #!/bin/bash
          test -x /usr/bin/sss_ssh_knownhosts && \
              sed -e 's/GlobalKnownHostsFile/#GlobalKnownHostsFile/' \
                  -e 's/ProxyCommand \/usr\/bin\/sss_ssh_knownhostsproxy -p %p %h/KnownHostsCommand \/usr\/bin\/sss_ssh_knownhosts %H/' \
                  -i /etc/ssh/ssh_config.d/04-ipa.conf
          exit 0

    - name: Install system tests dependencies
      shell: bash
      working-directory: ./sssd/src/tests/system
      run: |
        set -ex

        sudo apt-get update

        # Install dependencies for python-ldap
        sudo apt-get install -y libsasl2-dev python3-dev libldap2-dev libssl-dev

        # Virtualenv
        pip3 install virtualenv
        python3 -m venv .venv
        source .venv/bin/activate

        # Install system tests requirements
        pip3 install -r ./requirements.txt

        # Install yq to parse yaml files
        sudo wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
        sudo chmod a+x /usr/local/bin/yq

    - name: Remove ad from mhc.yaml
      shell: bash
      working-directory: ./sssd/src/tests/system
      run: |
        yq -i 'del(.domains[0].hosts.[] | select(.role == "ad"))' mhc.yaml

    - name: Run tests
      shell: bash
      working-directory: ./sssd/src/tests/system
      run: |
        set -ex -o pipefail

        mkdir -p $GITHUB_WORKSPACE/artifacts
        source .venv/bin/activate
        MH_CONNECTION_DEBUG=yes pytest \
          --mh-collect-logs=always \
          --mh-collect-artifacts=always \
          -k test_passkey \
          --mh-topology=ipa \
          --color=yes \
          --show-capture=no \
          --mh-config=./mhc.yaml \
          --mh-artifacts-dir=$GITHUB_WORKSPACE/artifacts \
          --polarion-config=../polarion.yaml \
          --output-polarion-testcase=$GITHUB_WORKSPACE/artifacts/testcase.xml \
          --output-polarion-testrun=$GITHUB_WORKSPACE/artifacts/testrun.xml \
          -vvv . |& tee $GITHUB_WORKSPACE/pytest.log

    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: ignore
        name: ${{ matrix.tag }}-system
        path: |
          sssd/ci-install-deps.log
          artifacts
          build.log
          install.log
          pytest.log
          pytest-collect.log
